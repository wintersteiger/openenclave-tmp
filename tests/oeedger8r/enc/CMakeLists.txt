# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.
include(oeedl_file)

oeedl_file(../edl/array.edl enclave array)
oeedl_file(../edl/basic.edl enclave basic)
oeedl_file(../edl/enum.edl enclave enum)
oeedl_file(../edl/foreign.edl enclave foreign)
oeedl_file(../edl/pointer.edl enclave pointer)
oeedl_file(../edl/string.edl enclave string)
oeedl_file(../edl/struct.edl enclave struct)

# Custom target that depends on edge function implementations
# generated by the above commands.
add_custom_target(
    run_oeedger8r_trusted
    DEPENDS ${array} ${basic} ${enum} ${foreign} ${pointer} ${string} ${struct}
)

include(add_enclave_executable)

add_executable(edl_enc
    testarray.cpp
    testbasic.cpp 
    testenum.cpp 
    testforeign.cpp
    testpointer.cpp
    teststring.cpp
    teststruct.cpp
    )

# Make edl_enc depend on edl files and outputs using 
# the custom target.
add_dependencies(edl_enc run_oeedger8r_trusted) 

target_include_directories(edl_enc PRIVATE ${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/..)
target_compile_options(edl_enc PRIVATE -std=c++11)

target_link_libraries(edl_enc oelibcxx oeenclave)
